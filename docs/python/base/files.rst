file
====

Функции для работы с файлами
----------------------------

.. py:method:: open(path, **kwargs)

    * path - путь к открываемому файлу
    * mode - режим работы, по умолчанию r
        * w - запись, содержимое исчезает
        * r - чтение
        * a - добавление/запись файла, содержимое не изменяется
        * r+ - чтение/запись, содержимое не меняется
        * w+ - запись, содержимое исчезает
        * r+b - чтение/запись двоичного содержимого, содержимое сохраняется
        * w+b - чтение/запись двоичного содержимого, содержимое удаляется
        * rb - чтение двоичного файла
        * wr - запись двоичного файла, содержимое исчезае
    * buffering - определяет размер буферизации, по умолчанию -1
    * encoding - кодировка файла
    * errors - политику обработки ошибок кодирования символов и может иметь одно из следующих значений: 'strict', 'ignore', 'replace', 'backslashreplace' или 'xmlcharrefreplace'.
    * newline - определяет поведение режима поддержки универсального символа перевода строки и может иметь значение None, '', '\n', '\r' или '\r\n'.
    * closefd - логический флаг, который определяет,
      должен ли фактически закрываться дескриптор файла при вызове метода close().

        По умолчанию True

    Возвращает файловый дескрипор

    .. code-block:: py

        f = open('ilnurgi.txt')
        type(f)
        # type 'file'

    .. code-block:: py

        with open('file.txt') as f:
            # что-то делаем, после чего файл автоматический закроется


buffer
------

.. py:attribute:: buffer

    буфер файлового объекта


closed
------

.. py:attribute:: closed

    Состояние файла, закрыт, открыт


encoding
--------

.. py:attribute:: encoding

    Строка с названием кодировки файла, если определена (например, 'latin-1' или 'utf-8').

    Если кодировка не используется, этот атрибут имеет значение None.


mode
----

.. py:attribute:: mode

    Режим ввода-вывода


name
----

.. py:attribute:: name

    название файла


newlines
--------

.. py:attribute:: newlines

    Когда файл открывается в режиме поддержки универсального символа
    перевода строки,
    этот атрибут будет содержать представление символа окончания строки,
    фактически используемого в файле.

    Значением атрибута может быть None, которое говорит о том,
    что никаких символов завершения строки не было встречено;
    строка, содержащая ‘\n’, ‘\r’ или ‘\r\n’,
    или кортеж со всеми встреченными символами завершения строки.


softspace
---------

.. py:attribute:: softspace

    Логическое значение, сообщающее,
    должна ли инструкция print выводить пробел перед очередным значением.

    Классы, имитирующие файлы, должны предоставлять атрибут с этим именем,
    доступный для записи, инициализируемый нулем (только в Python 2).


close()
-------

.. py:method:: close()
    
    Закрывает файловый объект


fileno()
--------

.. py:method:: fileno()

    Возвращает целочисленный дескриптор файла


flush()
-------

.. py:method:: flush()

    Выталкивает буферы вывода


isatty()
--------

.. py:method:: isatty()

    Интерактивный терминал


read()
------

.. py:method:: read([n])
    
    Возвращает строку, прочитанные указанное количесвто байтов из файла.


readline()
----------

.. py:method:: readline([n])

    Возвращает строку, прочитанную из файла построчно.


readlines()
-----------

.. py:method:: readlines([n])
    
    Возвращает список, строки из файла

seek()
------

.. py:method:: seek(offset, [whence])

    * offset - позиция чтения
    * whence - относительно чего отсчитывается начальная позиция
        
        * io.SEEK_SET или 0 - новое положение отсчитывается от начала файла;
        * io.SEEK_CUR или 1 - от конца файла;
        * io.SEEK_END или 2 - от текущего положения в файле;

    Перемещает курсор в файле на определенную позицию


tell()
------

.. py:method:: tell()

    Возвращает текущее положение в файле в байтах от начала файла.


truncate()
----------

.. py:method:: truncate(size)

    Усекает файл до заданного размера


write()
-------

.. py:method:: write(str)
    
    Записывает в файл строку


writelines()
------------

.. py:method:: writelines(iter)

    Записывает в файл список строк
