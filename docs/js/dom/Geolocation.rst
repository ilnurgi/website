Geolocation - позволяет получить широту и долготу местоположения пользователя
=============================================================================


.. py:class:: Geolocation()


    .. py:function:: clearWatch(long watchId)
        
        Ос­та­нав­ли­ва­ет сле­же­ние за ме­сто­на­хо­ж­де­ни­ем поль­зо­ва­те­ля. В ар­гу­мен­те watchId долж­но пе­ре­да­вать­ся зна­че­ние, по­лу­чен­ное со­от­вет­ст­вую­щим вы­зо­вом ме­то­да watchPosition().


    .. py:function:: getCurrentPosition(function success, [function error], [object options])

        Асин­хрон­но оп­ре­де­ля­ет ме­сто­на­хо­ж­де­ние поль­зо­ва­те­ля с  уче­том па­ра­мет­ров options (пе­ре­чень свойств объ­ек­та option при­во­дит­ся ни­же). Этот ме­тод не­мед­лен­но воз­вра­ща­ет управ­ле­ние, а ко­гда ме­сто­на­хо­ж­де­ние поль­зо­ва­те­ля бу­дет оп­ре­де­ле­но,ука­зан­ной функ­ции об­рат­но­го вы­зо­ва success бу­дет пе­ре­дан объ­ект Geoposition.
        
        Или в слу­чае ошиб­ки (воз­мож­но из-за то­го, что поль­зо­ва­тель не дал раз­ре­ше­ние наоп­ре­де­ле­ние его ко­ор­ди­нат) функ­ции об­рат­но­го вы­зо­ва error бу­дет пе­ре­дан объ­ект GeolocationError.

        * `options` - обычный объект с атрибутами

            * `enableHighAccuracy`. Этот па­ра­метр го­во­рит о же­ла­тель­но­сти оп­ре­де­ле­ния ко­ор­ди­нат с вы­со­кой точ­но­стью, да­же ес­ли это по­вле­чет уве­ли­че­ние рас­хо­да энер­гии в  ак­ку­му­ля­то­рах. По умол­ча­нию име­ет зна­че­ние false. В уст­рой­ст­вах, спо­соб­ных оп­ре­де­лять ме­сто­на­хо­ж­де­ние по­сред­ст­вом из­ме­ре­ния мощ­но­сти сиг­на­лов WiFi или с по­мо­щью GPS, ус­та­нов­ка это­го па­ра­мет­ра в зна­че­ние true обыч­но оз­на­ча­ет «ис­поль­зо­вать GPS».

            * `maximumAge`. Этот па­ра­метр оп­ре­де­ля­ет мак­си­маль­ное вре­мя (в мил­ли­се­кун­дах), про­шед­шее с то­го мо­мен­та, как объ­ект Geoposition был пе­ре­дан функ­ции об­рат­но­го вы­зо­ва success. По умол­ча­нию име­ет зна­че­ние 0, т. е. ка­ж­дый вы­зов ме­то­да getCurrent­Position() или watchPosition() бу­дет за­но­во оп­ре­де­лять ме­сто­на­хо­ж­де­ние. Ес­ли ус­та­но­вить этот па­ра­метр в зна­че­ние 60000, на­при­мер, то реа­ли­за­ции бу­дет по­зво­ле­но воз­вра­щать лю­бой объ­ект Geoposition, по­лу­чен­ный в те­че­ние по­след­ней ми­ну­ты.

            * `timeout`. Этот па­ра­метр оп­ре­де­ля­ет про­дол­жи­тель­ность ожи­да­ния вы­пол­не­ния за­про­сав мил­ли­се­кун­дах. По умол­ча­нию име­ет зна­че­ние Infinity. По ис­те­че­нии ука­зан­но­го ин­тер­ва­ла вре­ме­ни бу­дет вы­зва­на функ­ция об­рат­но­го вы­зо­ва error. Об­ра­ти­тевни­ма­ние, что вре­мя ожи­да­ния раз­ре­ше­ния поль­зо­ва­те­ля на по­лу­че­ние его ме­сто­на­хо­ж­де­ния не вхо­дит в это зна­че­ние па­ра­мет­ра timeout.


    .. py:function:: watchPosition(function success, [function error], [object options])
        
        Этот ме­тод по­хож на ме­тод getCurrentPosition(), но по­сле оп­ре­де­ле­ния те­ку­ще­го ме­сто­на­хо­ж­де­ния поль­зо­ва­те­ля он про­дол­жа­ет сле­дить за его ко­ор­ди­на­та­ми и вы­зы­ва­ет функ­цию success ка­ж­дый раз, ко­гда об­на­ру­жит су­ще­ст­вен­ное их из­ме­не­ние.
    
        Воз­вра­ща­ет чис­ло, ко­то­рое мож­но пе­ре­дать ме­то­ду clearWatch(), что­бы ос­та­но­витьсле­же­ние за ме­сто­на­хо­ж­де­ни­ем поль­зо­ва­те­ля.