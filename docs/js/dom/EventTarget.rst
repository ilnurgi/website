EventTarget - объект, способный принимать события
=================================================

.. py:class:: EventTarget()


    .. py:function:: addEventListener(string type,function listener,[boolean useCapture])
        
        Ре­ги­ст­ри­ру­ет функ­цию listener в ка­че­ст­ве об­ра­бот­чи­ка со­бы­тий ти­па type. Ар­гу­мент type – стро­ка с име­нем без пре­фик­са «on». Ар­гу­мент useCapture дол­жен иметь зна­че­ние true, ес­ли ре­ги­ст­ри­ру­ет­ся пе­ре­хва­ты­ваю­щий об­ра­бот­чик в  пред­ке эле­мен­та, яв­ляю­ще­го­ся ис­тин­ной це­лью со­бы­тия. Об­ра­ти­те вни­ма­ние, что не­ко­то­рые бро­узе­ры все еще тре­бу­ют пе­ре­да­чи этой функ­ции третье­го ар­гу­мен­та, по­это­му при ре­ги­ст­ра­ции обыч­но­го, не­пе­ре­хва­ты­ваю­ще­го, об­ра­бот­чи­ка в треть­ем ар­гу­мен­те сле­ду­ет пе­ре­да­вать false.

    
    .. py:function:: attachEvent(string type, function listener)
        
        Ре­ги­ст­ри­ру­ет функ­цию listener как об­ра­бот­чик со­бы­тий ти­па type. Об­ра­ти­те вни­ма­ние, что этот ме­тод тре­бу­ет, что­бы имя в ар­гу­мен­те type вклю­ча­ло пре­фикс «on». Для IE

    .. py:function:: detachEvent(string type, function listener)
    
        Этот ме­тод дей­ст­ву­ет как об­рат­ный ме­то­ду attachEvent().

        
    .. py:function:: dispatchEvent(Event event)
        
        От­прав­ля­ет дан­но­му эле­мен­ту ис­кус­ст­вен­ное со­бы­тие event. Что­бы от­пра­вить со­бы­тие, не­об­хо­ди­мо соз­дать но­вый объ­ект Event вы­зо­вом ме­то­да document.create­Event() с име­нем со­бы­тия (та­ким как «Events», в слу­чае про­сто­го со­бы­тия). За­тем ини­циа­ли­зи­ро­вать его ме­то­дом ини­циа­ли­за­ции соз­дан­но­го объ­ек­та Event: для про­стых со­бы­тий – вы­зо­вом ме­то­да initEvent() (см. Event). По­сле это­го от­пра­вить ини­циа­ли­зи­ро­ван­ное со­бы­тие, пе­ре­дав его рас­смат­ри­вае­мо­му ме­то­ду. В со­вре­мен­ных бро­узе­рах ка­ж­дый объ­ект Event име­ет свой­ст­во isTrusted. Для ис­ку­ст­вен­ных со­бы­тий, по­сы­лае­мых про­грамм­но, это свой­ст­во бу­дет иметь зна­че­ние false.

        Раз­лич­ные ти­пы объ­ек­тов со­бы­тий оп­ре­де­ля­ют соб­ст­вен­ные ме­то­ды ини­циа­ли­за­ции. Эти ме­то­ды ред­ко ис­поль­зу­ют­ся на прак­ти­ке, име­ют длин­ные спи­ски ар­гу­мен­тов и не опи­сы­ва­ют­ся в этой кни­ге. Ес­ли вам по­тре­бу­ет­ся соз­дать, ини­циа­ли­зи­ро­вать и  по­слать ис­ку­ст­вен­ное со­бы­тие, бо­лее слож­ное, чем про­стой объ­ект Event, по­ищи­те опи­са­ние со­от­вет­ст­вую­ще­го ме­то­да ини­циа­ли­за­ции в элек­трон­ной до­ку­мен­та­ции.


    .. py:function:: removeEventListener(string type, function listener, [boolean useCapture])
        
        Уда­ля­ет за­ре­ги­ст­ри­ро­ван­ный об­ра­бот­чик listener со­бы­тия. При­ни­ма­ет те же ар­гу­мен­ты, что и ме­тод addEventListener().